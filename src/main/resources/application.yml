server:
  port: 80
  error:
    whitelabel:
      enabled: false
  servlet:
    # 모든 Servlet Container 에는 default Servlet 이라는게 등록되어 있다.
    # 실제로 tomcat 을 설치한 다음 conf 디렉토리 하위의 web.xml 을 열어보면 default Servlet 이 등록되어 있는것을 확인할 수 있다.
    register-default-servlet: true  

spring:
  # spring.main.allow-circular-references to true.
  main:
    # Relying upon circular references is discouraged and they are prohibited by default. 
    # Update your application to remove the dependency cycle between beans. As a last resort, 
    # it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.
    # Spring Boot 2.6.x 버전부터, 순환 참조를 default로 금지함으로서 발생되는
    # @Lazy 활용과 같은 일시적인 방법 등이 있지만, 설계 원칙에 따라 적합한 방식은 순환 참조 고리를 끊도록 재설계 하면 된다.
    allow-circular-references: true
  mustache:
    prefix: classpath:/templates/mustache/
    suffix: 

  # freemarker:
  #   suffix: .ftl
  #   template-loader-path: classpath:/templates
  # mvc:
  #   view:
  #     prefix: /WEB-INF/views/
  #     suffix: .jsp
    # static-path-pattern: /res/**   
  # web:
  #   resources:
      # static-locations: 
      #   - classpath:/static/ 
      #   - classpath:/public/ 

      #add-mappings: false
# 정적 리소스에 변화가 있을 때 바로 반영한다.
# spring.devtools.livereload.enabled=true

  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    cache: false
    check-template-location: true


# # thymeleaf 참조 경로
# spring.thymeleaf.prefix=classpath:/templates/
# spring.thymeleaf.suffix=.html

# # thymeleaf에 대한 캐시를 남기지 않는다. cache=false 설정(운영시는 true)
# spring.thymeleaf.cache=false
# # templates 디렉토리에 파일이 있는지 없는지 체크, 없으면 에러를 발생시킨다.
# spring.thymeleaf.check-template-location=true

# /api-docs endpoint custom path
# springdoc.api-docs.path=/api-docs  
# swagger-ui custom path
# springdoc.swagger-ui.path=/swagger-ui.html
# Disabling the /v3/api-docs endpoint
# springdoc.api-docs.enabled=false
# springdoc:
#   api-docs:
#     path: /api-docs
#   swagger-ui:
#     path: /swagger-ui.html


---
spring:
  profiles:
    # 환경변수에 spring.profiles.active 가 설정되어 있지 않으면
    # 아래에 설정된 프로파일이 디폴트가 된다.
    active: local
    group:
      local: oauth
      dev: jdbc

---
spring:
  config:
    activate:
      on-profile: oauth
    import:
      - classpath:/oauth-config.yml


---
spring:
  config:
    activate:
      on-profile: jdbc
    # import:
      # - classpath:/oauth-config.yml
